<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Main multirotor link -->
  <xacro:macro name="multirotor_base_macro"
    params="robot_namespace mass body_width body_height mesh_file mesh_file_mass *inertia">
    
    <link name="base_link"></link>
    <joint name="base_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="base_link_inertia" />
    </joint>
    <link name="base_link_inertia">
      <inertial>
        <mass value="${mass}" />  <!-- [kg] -->
        <origin xyz="0 0 0" />
        <xacro:insert_block name="inertia" />
      </inertial>

      <visual>
        <origin xyz="0 0 0.125" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://morus_description/meshes/${mesh_file}"
            scale="1 1 1" />
          <!--box size="${body_width} ${body_width} ${body_height}"/--> <!-- [m] [m] [m] -->
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${body_width} ${body_width} ${body_height}" /> <!-- [m] [m] [m] -->
        </geometry>
      </collision>
    </link>

    <!-- IMU -->
    <link name="imu_link">
      <inertial>
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0"
          izz="0.00001" />
        <mass value="0.01" />  <!-- [kg] -->
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
    </link>
    <!-- IMU joint -->
    <joint name="imu_joint" type="revolute">
      <!--origin xyz="0 0 0" rpy="3.1416 0 0" / -->
      <parent link="base_link" />
      <child link="imu_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>
    
    <!-- attach multirotor_base_plugin to the base_link -->
    <gazebo>
      <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="rosbag">
        <robotNamespace>$(arg name)</robotNamespace>
        <linkName>base_link</linkName>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- Macro file for movable mass. It defines joint between mass and stick, and link which defines actual mass. Stick
  is defined in other macro file-->
  <xacro:macro name="movable_mass" params="mass_number parent mass dimension color x_axis y_axis z_axis orientation *origin *inertia">
    <joint name="stick_to_movable_mass_${mass_number}" type="prismatic">
      <xacro:insert_block name="origin"/>
      <axis xyz="${x_axis} ${y_axis} ${z_axis}"/>
      <parent link="${parent}"/>
      <child link="movable_mass_${mass_number}"/>
      <limit lower="-0.3" upper="0.3" effort="10000" velocity="20"/>
      <dynamics damping="10" />  <!--friction="0.1" used only in Gazebo >= 5.0, damping is the viscous friction damping,
       i.e. Ft = damping * v -->
    </joint>
    <link name="movable_mass_${mass_number}">
      <visual>
        <!--origin rpy="0 0 ${orientation}" xyz="0 0 ${0*movable_mass_dimension/2}"/-->
        <origin rpy="0 0 ${orientation}" xyz="0 0 0"/>
        <geometry>
          <!--mesh filename="package://morus_description/meshes/${mesh_file_mass}"
            scale="1 1 1" /-->
          <box size="${1*dimension} ${1*dimension} ${1*dimension}"/>
        </geometry>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 ${0*movable_mass_dimension/2}"/>
        <geometry>
          <box size="${dimension} ${dimension} ${dimension}"/>
        </geometry>
      </collision>
      <inertial>
        <origin rpy="0 0 0" xyz="0 0 ${0*movable_mass_dimension/2}"/>
        <mass value="${mass}"/>
        <xacro:insert_block name="inertia"/>
      </inertial>
    </link>

    <gazebo reference="movable_mass_${mass_number}">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>

  <!-- Macro file for tilted props. It defines joint between prop and body, and link which defines actual joint. Stick
  is defined in other macro file
  <xacro:macro name="tilt" params="parent motor_number x_axis y_axis color *origin">
    <joint name="tilt_${motor_number}_joint" type="revolute">
      <xacro:insert_block name="origin"/>
      <axis xyz="${x_axis} ${y_axis} 0"/>
      <parent link="${parent}"/>
      <child link="tilt_${motor_number}"/>
      <limit lower="-0.785398163" upper="0.785398163" effort="10000" velocity="20"/>
    </joint>
    <link name="tilt_${motor_number}">
      <visual>
        <geometry>
          <cylinder length="0.1" radius="0.05" />
        </geometry>
      </visual>
      <collision>
        <xacro:insert_block name="origin" />
        <geometry>
            <cylinder length="0.1" radius="0.05" />
        </geometry>
      </collision> 
      <inertial>
          <xacro:insert_block name="origin" />
          <mass value="0.1" />
          <inertia
            ixx="1.0" ixy="0.0" ixz="0.0"
            iyy="1.0" iyz="0.0"
            izz="1.0" />
      </inertial>
    </link>   

    <gazebo reference="tilt_${motor_number}">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>  -->

  <!-- Macro file for the wing. It defines joint between base and wing.-->
  <xacro:macro name="wing" 
     params="robot_namespace parent wing_number mass wing_x wing_y wing_z x_axis y_axis color *origin *inertia">
    <joint name="wing_${wing_number}_joint" type="revolute">
    <xacro:insert_block name="origin" />
      <axis xyz="${x_axis} ${y_axis} 0"/>
      <parent link="${parent}"/>
      <child link="wing_${wing_number}"/>
      <limit lower="-0.261799388" upper="0.261799388" effort="10000" velocity="10"/>
    </joint>

    <link name="wing_${wing_number}">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="${1*wing_x} ${1*wing_y} ${1*wing_z}"/>
        </geometry>
      </visual>

      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="${wing_x} ${wing_y} ${wing_z}"/>
        </geometry>
      </collision>
      <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="${wing_mass}"/>
        <xacro:insert_block name="inertia"/>
      </inertial>
    </link>

    <!--gazebo> 
      <plugin name="lifting_surface_${wing_number}" filename="libLiftDragPlugin.so">
        <a0>0</a0>
        <alpha_stall>0.3368</alpha_stall>
        <cla>5.418</cla>
        <cla_stall>-2.1419</cla_stall>
        <cda>0.0</cda>
        <cda_stall>0.0</cda_stall>
        <cma>0.0</cma>
        <cma_stall>0.0</cma_stall>
        <area>3</area>
        <fluid_density>1.2041</fluid_density>
        <forward>-1 0 0</forward>
        <upward>0 -1 0</upward>
        <cp>0 0 1</cp>
       
        <control_joint_name>wing_${wing_number}_joint</control_joint_name>       
      </plugin>
    </gazebo-->
    <gazebo reference="wing_${wing_number}">
      <material>Gazebo/${color}</material>
    </gazebo>
</xacro:macro>

  <!-- Rotor joint and link -->
  <xacro:macro name="vertical_rotor"
    params="robot_namespace suffix direction motor_constant moment_constant area_control_flap area_antitorque_flap fluid_density distance_control_flap distance_antitorque_flap thrust_coefficient torque_coefficient slip_velocity_coefficient lift_coefficient_control_flap drag_coefficient_control_flap lift_coefficient_antitorque_flap drag_coefficient_antitorque_flap lift_coefficient_control_flap_at0 drag_coefficient_control_flap_at0 lift_coefficient_antitorque_flap_at0 drag_coefficient_antitorque_flap_at0 parent mass_rotor radius_rotor time_constant max_rot_velocity motor_number rotor_drag_coefficient rolling_moment_coefficient color *origin *inertia">
    <joint name="rotor_${motor_number}_joint" type="continuous">
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 1" />
      <!-- TODO(ff): not currently set because it's not yet supported -->
      <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
      <parent link="${parent}" />
      <child link="rotor_${motor_number}" />

    </joint>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz> 
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
    <link name="rotor_${motor_number}">
      <inertial>
        <mass value="${mass_rotor}" /> <!-- [kg] -->
        <xacro:insert_block name="inertia" />
      </inertial>
      <visual>
        <geometry>
          <!-- <cylinder length="0.005" radius="${radius_rotor}"/> --> <!-- [m] -->
          <mesh filename="package://morus_description/meshes/propeller_${direction}.dae"
            scale="0.0025 0.0025 0.0025" />
          <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
        </geometry>
      </visual>
      <collision>
        <geometry>
          <cylinder length="0.005" radius="${radius_rotor}" /> <!-- [m] -->
        </geometry>
      </collision>
    </link>
    <gazebo>
      <plugin name="${suffix}_motor_model" filename="libmorus_gazebo_ductedfan_motor_model.so">
        <jointName>rotor_${motor_number}_joint</jointName>
        <linkName>rotor_${motor_number}</linkName>
        <turningDirection>${direction}</turningDirection>
        <timeConstant>${time_constant}</timeConstant>
        <maxRotVelocity>${max_rot_velocity}</maxRotVelocity>
        <motorConstant>${motor_constant}</motorConstant>
        <momentConstant>${moment_constant}</momentConstant>
        <commandTopic>${robot_namespace}/command/motors</commandTopic>
        <motorNumber>${motor_number}</motorNumber>
        <rotorDragCoefficient>${rotor_drag_coefficient}</rotorDragCoefficient>
        <rollingMomentCoefficient>${rolling_moment_coefficient}</rollingMomentCoefficient>
        <motorVelocityTopic>${robot_namespace}/motor_vel/${motor_number}</motorVelocityTopic>
        <rotorVelocitySlowdownSim>${rotor_velocity_slowdown_sim}</rotorVelocitySlowdownSim>

        <angleControlFlapRefSubTopic>morus/angle_wing_${motor_number}_ref_value</angleControlFlapRefSubTopic>
        <angleControlFlapCommandPubTopic>morus/angle_wing_${motor_number}_controller/command</angleControlFlapCommandPubTopic>
        <angleControlFlapValueSubTopic>morus/angle_wing_${motor_number}_controller/state</angleControlFlapValueSubTopic>


        <fluidDensity>${fluid_density}</fluidDensity>
        <areaControlFlap>${area_control_flap}</areaControlFlap>
        <areaAntitorqueFlap>${area_antitorque_flap}</areaAntitorqueFlap>
        <distanceControlFlap>${distance_control_flap}</distanceControlFlap>
        <distanceAntitorqueFlap>${distance_antitorque_flap}</distanceAntitorqueFlap>

        <thrustCoefficient>${thrust_coefficient}</thrustCoefficient>
        <torqueCoefficient>${torque_coefficient}</torqueCoefficient>
        <slipVelocityCoefficient>${slip_velocity_coefficient}</slipVelocityCoefficient>
        <liftCoefficientControlFlap>${lift_coefficient_control_flap}</liftCoefficientControlFlap>
        <dragCoefficientControlFlap>${drag_coefficient_control_flap}</dragCoefficientControlFlap>
        <liftCoefficientAntitorqueFlap>${lift_coefficient_antitorque_flap}</liftCoefficientAntitorqueFlap> 
        <dragCoefficientAntitorqueFlap>${drag_coefficient_antitorque_flap}</dragCoefficientAntitorqueFlap>  
        <liftCoefficientControlFlapAt0>${lift_coefficient_control_flap_at0}</liftCoefficientControlFlapAt0> 
        <dragCoefficientControlFlapAt0>${drag_coefficient_control_flap_at0}</dragCoefficientControlFlapAt0>
        <liftCoefficientAntitorqueFlapAt0>${lift_coefficient_antitorque_flap_at0}</liftCoefficientAntitorqueFlapAt0>
        <dragCoefficientAntitorqueFlapAt0>${drag_coefficient_antitorque_flap_at0}</dragCoefficientAntitorqueFlapAt0>
      </plugin>
    </gazebo>
    <gazebo reference="rotor_${motor_number}">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>

  <!-- We add a <transmission> block for every joint that we wish to actuate. -->
  <xacro:macro name="transmisija" params="trans_number joint_name">
    <transmission name="transmission_${trans_number}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${joint_name}">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_${trans_number}">
        <hardwareInterface>EffortActuatorInterface</hardwareInterface>
        <mechanicalReduction>100</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:macro name="landing_gear" params="gear_num parent mass dim_x dim_y dim_z *origin *inertia">
    <joint name="land_gear_${gear_num}" type="fixed">
      <xacro:insert_block name="origin"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent}"/>
      <child link="land_gear_${gear_num}"/>
    </joint>
    <link name="land_gear_${gear_num}">
      <!--visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="0.01 0.01 0.0001"/>
        </geometry>
      </visual-->
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="${dim_x} ${dim_y} ${dim_z}"/>
        </geometry>
      </collision>
      <inertial>
         <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="${mass}"/>
        <xacro:insert_block name="inertia"/>
      </inertial>
    </link>

  </xacro:macro>

   <!-- camera -->
  <xacro:macro name="camera_macro" params="robot_namespace">
    <!-- joint -->
    <joint name="camera_joint" type="fixed">
      <axis xyz="0 1 0" />
      <origin xyz="0 0 0.2" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="camera_link" />
    </joint>

    <!-- link -->
    <link name="camera_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.1 0.1 0.1" />
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.1 0.1 0.1" />
        </geometry>
        <material name="red" />
      </visual>

      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0" />
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <gazebo reference="camera_link">
      <sensor type="camera" name="camera1">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>2</horizontal_fov>
          <image>
            <width>800</width>
            <height>600</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>${robot_namespace}/camera1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

</robot>
