#!/usr/bin/env python
PACKAGE = "mav_msgs"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("x_kp", double_t, 0, "X ctl PID P gain", 0.01, 0, 1000)
gen.add("x_ki", double_t, 0, "X ctl PID I gain", 0, 0, 1000)
gen.add("x_kd", double_t, 0, "X ctl PID D gain", 0, 0, 1000)

gen.add("vx_kp", double_t, 0, "Vx ctl PID P gain", 0.01, 0, 1000)
gen.add("vx_ki", double_t, 0, "Vx ctl PID I gain", 0, 0, 1000)
gen.add("vx_kd", double_t, 0, "Vx ctl PID D gain", 0, 0, 1000)

gen.add("y_kp", double_t, 0, "Y ctl PID P gain", 0.01, 0, 1000)
gen.add("y_ki", double_t, 0, "Y ctl PID I gain", 0, 0, 1000)
gen.add("y_kd", double_t, 0, "Y ctl PID D gain", 0, 0, 1000)

gen.add("vy_kp", double_t, 0, "Vy ctl PID P gain", 0.01, 0, 1000)
gen.add("vy_ki", double_t, 0, "Vy ctl PID I gain", 0, 0, 1000)
gen.add("vy_kd", double_t, 0, "Vy ctl PID D gain", 0, 0, 1000)

gen.add("filter_ref", double_t, 0, "Filter constant for reference", 0.01, 0, 5)
gen.add("filter_meas", double_t, 0, "Filter constant for measurement", 0.01, 0, 5)

gen.add("lambd", double_t, 0, "X / Y ctl switch lambda", 0.5, 0, 50)
gen.add("vel_lambda", double_t, 0, "VX / VY ctl switch lambda", 0.8, 0, 50)

gen.add("comp_gain", double_t, 0, "X / Y compensator gain", 0.05, 0, 10)
gen.add("vel_comp_gain", double_t, 0, "VX / VY compensator gain", 0.5, 0, 50)

gen.add("eps", double_t, 0, "Pos switching constant", 0.01, 0.01, 1)
gen.add("vel_eps", double_t, 0, "Velocity switching constant", 0.01, 0.01, 1)

gen.add("beta", double_t, 0, "Pos switch gain", 0.01, 0, 1)
gen.add("vel_beta", double_t, 0, "Velocity switch gain", 0.01, 0, 1)

exit(gen.generate(PACKAGE, "mav_msgs", "SmcPosCtlParams"))
