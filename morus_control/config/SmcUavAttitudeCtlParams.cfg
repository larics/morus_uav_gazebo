#!/usr/bin/env python
PACKAGE = "morus_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("kp", double_t, 0, "Roll / pitch ctl PID P gain", 3, 0, 100)
gen.add("ki", double_t, 0, "Roll / pitch ctl PID I gain", 1, 0, 100)
gen.add("kd", double_t, 0, "Roll / pitch ctl PID D gain", 0.0, 0, 100)

gen.add("rate_kp", double_t, 0, "Roll / pitch rate ctl PID P gain", 2.5, 0, 100)
gen.add("rate_ki", double_t, 0, "Roll / pitch rate ctl PID I gain", 0.0, 0, 100)
gen.add("rate_kd", double_t, 0, "Roll / pitch rate ctl PID D gain", 0.0, 0, 100)

gen.add("lambd", double_t, 0, "Roll / pitch ctl compensator lambda", 0.5, 0, 50)
gen.add("rate_lambda", double_t, 0, "Roll / pitch rate ctl compensator lambda", 0.8, 0, 50)

gen.add("comp_gain", double_t, 0, "Roll / pitch compensator gain", 0.05, 0, 10)
gen.add("rate_comp_gain", double_t, 0, "VZ compensator gain", 0.5, 0, 50)

gen.add("eps", double_t, 0, "Angle switching constant", 0.01, 0.01, 1)
gen.add("rate_eps", double_t, 0, "Angle rate switching constant", 0.01, 0.01, 1)

gen.add("beta", double_t, 0, "Roll / pitch switch gain", 0.01, 0, 1)
gen.add("rate_beta", double_t, 0, "Roll / pitch rate switch gain", 0.01, 0, 1)

gen.add("ff", double_t, 0, "Roll / pitch feed-forward gain", 0.1, 0, 10)
gen.add("rate_ff", double_t, 0, "Roll / pitch rate feed-forward gain", 0.5, 0, 50)

exit(gen.generate(PACKAGE, "morus_control", "SmcUavAttitudeCtlParams"))
