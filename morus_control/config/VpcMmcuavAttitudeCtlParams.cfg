#!/usr/bin/env python
PACKAGE = "morus_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("roll_kp", double_t, 0, "Roll ctl PID P gain", 0.5, 0, 100)
gen.add("roll_ki", double_t, 0, "Roll ctl PID I gain", 0.1, 0, 100)
gen.add("roll_kd", double_t, 0, "Roll ctl PID D gain", 0.0, 0, 100)
gen.add("roll_r_kp", double_t, 0, "Roll rate ctl PID P gain", 20, 0, 1000)
gen.add("roll_r_ki", double_t, 0, "Roll rate ctl PID I gain", 20, 0, 1000)
gen.add("roll_r_kd", double_t, 0, "Roll rate ctl PID D gain", 2, 0, 1000)

gen.add("pitch_kp", double_t, 0, "Pitch ctl PID P gain", 2.0,  0, 100)
gen.add("pitch_ki", double_t, 0, "Pitch ctl PID I gain", 0.4, 0,   100)
gen.add("pitch_kd", double_t, 0, "Pitch ctl PID D gain", 0.2, 0, 100)
gen.add("pitch_r_kp", double_t, 0, "Pitch rate ctl PID P gain", 0.12,  0, 1000)
gen.add("pitch_r_ki", double_t, 0, "Pitch rate ctl PID I gain", 0.01, 0,  1000)
gen.add("pitch_r_kd", double_t, 0, "Pitch rate ctl PID D gain", 0, 0, 1000)

gen.add("yaw_kp", double_t, 0, "Yaw ctl PID P gain", 1,  0, 100)
gen.add("yaw_ki", double_t, 0, "Yaw ctl PID I gain",    0.001, 0,   100)
gen.add("yaw_kd", double_t, 0, "Yaw ctl PID D gain",  0.1, 0, 100)
gen.add("yaw_r_kp", double_t, 0, "Yaw rate ctl PID P gain", 200, 0, 1000)
gen.add("yaw_r_ki", double_t, 0, "Yaw rate ctl PID I gain", 0, 0, 1000)
gen.add("yaw_r_kd", double_t, 0, "Yaw rate ctl PID D gain", 0, 0, 1000)

gen.add("vpc_roll_kp", double_t, 0, "VPC Roll ctl PID P gain", 0, 0, 10000)
gen.add("vpc_roll_ki", double_t, 0, "VPC Roll ctl PID I gain", 1.0, 0, 10000)
gen.add("vpc_roll_kd", double_t, 0, "VPC Roll ctl PID D gain", 0.0, 0, 10000)
gen.add("vpc_pitch_kp", double_t, 0, "VPC Pitch ctl PID P gain", 0, 0, 10000)
gen.add("vpc_pitch_ki", double_t, 0, "VPC Pitch ctl PID I gain", 1.0, 0, 10000)
gen.add("vpc_pitch_kd", double_t, 0, "VPC Pitch ctl PID D gain", 0.0, 0, 10000)

gen.add("rate_mv_filt_K", double_t, 0, "VPC angular velocities filter", 1.0, 0.0, 2.0)
gen.add("rate_mv_filt_T", double_t, 0, "VPC angular velocities filter", 0.02, 0.0, 0.5)
gen.add("roll_reference_prefilter_K", double_t, 0, "Prefilter gain for roll reference", 1.0, 0.0, 2.0)
gen.add("roll_reference_prefilter_T", double_t, 0, "Prefilter time constant for roll reference", 0.0, 0.0, 2.0)
gen.add("pitch_reference_prefilter_K", double_t, 0, "Prefilter gain for pitch reference", 1.0, 0.0, 2.0)
gen.add("pitch_reference_prefilter_T", double_t, 0, "Prefilter time constant for pitch reference", 0.1, 0.0, 2.0)

gen.add("roll_rate_output_trim", double_t, 0, "Roll output offset", 0.0, -1.0, 1.0)
gen.add("pitch_rate_output_trim", double_t, 0, "Pitch output offset", 0.0, -1.0, 1.0)

exit(gen.generate(PACKAGE, "morus_control", "VpcMmcuavAttitudeCtlParams"))
